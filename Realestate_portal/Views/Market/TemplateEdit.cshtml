@using Realestate_portal.Models.ViewModels.Market
@model TemplateCanvas
@{
    ViewBag.Title = "TemplateEdit";
    Layout = "~/Views/Shared/_CRM_Marketing.cshtml";
}





@if (Model.Company != null)
{

    <style>
    #company {
        display: flex;
        flex-direction: row;
        align-items:center;
        justify-content: @Model.Company.text_position;
        height: @Model.Company.height;
        width: @Model.Company.width;
        font-size: @Model.Company.size;
        background-color: none;
        font-family: '@Model.Company.Font' @Model.Company.Font_type;
        color: @Model.Company.Color;
        position: relative;
        bottom: @Model.Company.p_bottom;
        left: @Model.Company.p_left;
        font-weight: @Model.Company.font_weight;
        overflow: visible;
        padding:0;
    }
    </style>


}

@if (Model.Header != null)
{

    <style>
    #header {
        display: flex;
        flex-direction: row;
        align-items:center;
        justify-content: @Model.Header.text_position;
        height: @Model.Header.height;
        font-size: @Model.Header.size;
        width: @Model.Header.width;
        font-family: '@Model.Header.Font' @Model.Header.Font_type;
        color: @Model.Header.Color;
        position:relative;
        bottom: @Model.Header.p_bottom;
        right: @Model.Header.p_right;
        left: @Model.Header.p_left;
        font-weight: @Model.Header.font_weight;
        overflow:visible;
        padding:0;
    }
    </style>


}

@if (Model.Agent != null)
{

    <style>
    #agent {
        display: flex;
        flex-direction: row;
        align-items:center;
        justify-content: @Model.Agent.text_position;
        width: @Model.Agent.width;
        height: @Model.Agent.height;
        font-size: @Model.Agent.size;
        background-color: none;
        font-family:'@Model.Agent.Font' @Model.Agent.Font_type;
        color: @Model.Agent.Color;
        position: relative;
        bottom: @Model.Agent.p_bottom;
        left: @Model.Agent.p_left;
        font-weight: @Model.Agent.font_weight;
        overflow: visible;
        padding: 0;

    }
    </style>


}

@if (Model.Phone != null)
{

    <style>
    #phone {
        display: flex;
        flex-direction: row;
        align-items: center;
        justify-content: @Model.Phone.text_position;
        width: @Model.Phone.width;
        height: @Model.Phone.height;
        font-size: @Model.Phone.size;
        background-color: none;
        font-family: '@Model.Phone.Font' @Model.Phone.Font_type;
        color: @Model.Phone.Color;
        position: relative;
        bottom: @Model.Phone.p_bottom;
        left: @Model.Phone.p_left;
        font-weight: @Model.Phone.font_weight;
        overflow: visible;
        padding: 0;
    }
    </style>

}

@if (Model.Photo != null)
{

    <style>


        #originalPhoto {
            position: relative;
            bottom: @Model.Photo.p_bottom;
            left: @Model.Photo.p_left;
            width: @Model.Photo.width;
            height: @Model.Photo.height;
        }
    </style>

    if (Model.Photo.shape.Contains("round"))
    {
        <style>
            #photoelem {
                border-radius: 50%;
            }

            #originalPhoto {
                border-radius: 50%;
            }
        </style>
    }
    else
    {
        <style>
            #photoelem {
            }
        </style>

    }

}

@if (Model.Logo != null)
{

    <style>


        #logo {
            width: @Model.Logo.width;
            height: @Model.Logo.height;
            position: relative;
            bottom: @Model.Logo.p_bottom;
            left: @Model.Logo.p_left;
        }
    </style>

}

@if (Model.Website != null)
{

    <style>


    #website {
        display: flex;
        flex-direction: row;
        align-items: center;
        justify-content: @Model.Website.text_position;
        width: @Model.Website.width;
        height: @Model.Website.height;
        font-size: @Model.Website.size;
        background-color: none;
        font-family: '@Model.Website.Font' @Model.Website.Font_type;
        color: @Model.Website.Color;
        position: relative;
        bottom: @Model.Website.p_bottom;
        left: @Model.Website.p_left;
        font-weight: @Model.Website.font_weight;
        overflow: visible;
        padding: 0;
    }
    </style>

}

@if (Model.Title != null)
{

    <style>


          #title {
            justify-content: @Model.Title.text_position;
            width: @Model.Title.width;
            height: @Model.Title.height;
            font-size: @Model.Title.size;
            background-color: none;
            font-family: '@Model.Title.Font' @Model.Title.Font_type;
            color: @Model.Title.Color;
            position: relative;
            bottom: @Model.Title.p_bottom;
            left: @Model.Title.p_left;
            font-weight: @Model.Title.font_weight;
            display: flex;
            flex-direction: row;
            align-items: center;
            overflow: visible;
            padding: 0;
  /** border: solid red 2px; */
              text-align:@Model.Title.text_position;
        }
    </style>

}

@if (Model.Email != null)
{

    <style>


    #email {
        width: @Model.Email.width;
        height: @Model.Email.height;
        font-size: @Model.Email.size;
        background-color: none;
        font-family: '@Model.Email.Font' @Model.Email.Font_type;
        color: @Model.Email.Color;
        position: relative;
        bottom: @Model.Email.p_bottom;
        left: @Model.Email.p_left;
        font-weight: @Model.Email.font_weight;
        display: flex;
        flex-direction: row;
        align-items: center;
        justify-content: @Model.Email.text_position;
        overflow: visible;
        padding: 0;

    }
    </style>

}


@if (Model.Message != null)
{

    <style>


    #message {
        width: @Model.Message.width;
        height: @Model.Message.height;
        font-size: @Model.Message.size;
        background-color: none;
        font-family: '@Model.Message.Font' @Model.Message.Font_type;
        color: @Model.Message.Color;
        position: relative;
        bottom: @Model.Message.p_bottom;
        left: @Model.Message.p_left;
        font-weight: @Model.Message.font_weight;
        display: flex;
        flex-direction: row;
        align-items: center;
        justify-content: @Model.Message.text_position;
        overflow: visible;
        padding: 0;

    }
    </style>

}

@if (Model.Other != null)
{

    <style>


    #other {
        width: @Model.Other.width;
        height: @Model.Other.height;
        font-size: @Model.Other.size;
        background-color: none;
        font-family: '@Model.Other.Font' @Model.Other.Font_type;
        color: @Model.Other.Color;
        position: relative;
        bottom: @Model.Other.p_bottom;
        left: @Model.Other.p_left;
        font-weight: @Model.Other.font_weight;
        display: flex;
        flex-direction: row;
        align-items: center;
        justify-content: @Model.Other.text_position;
        overflow: visible;
        padding: 0;

    }
    </style>

}

@if (Model.Adress_1 != null)
{

    <style>


    #adress1 {
        width: @Model.Adress_1.width;
        height: @Model.Adress_1.height;
        font-size: @Model.Adress_1.size;
        background-color: none;
        font-family: '@Model.Adress_1.Font' @Model.Adress_1.Font_type;
        color: @Model.Adress_1.Color;
        position: relative;
        bottom: @Model.Adress_1.p_bottom;
        left: @Model.Adress_1.p_left;
        font-weight: @Model.Adress_1.font_weight;
        display: flex;
        flex-direction: row;
        align-items: center;
        justify-content: @Model.Adress_1.text_position;
        overflow: visible;
        padding: 0;

    }
    </style>

}


@if (Model.Adress_2 != null)
{

    <style>


    #adress2 {
        width: @Model.Adress_2.width;
        height: @Model.Adress_2.height;
        font-size: @Model.Adress_2.size;
        background-color: none;
        font-family: '@Model.Adress_2.Font' @Model.Adress_2.Font_type;
        color: @Model.Adress_2.Color;
        position: relative;
        bottom: @Model.Adress_2.p_bottom;
        left: @Model.Adress_2.p_left;
        font-weight: @Model.Adress_2.font_weight;
        display: flex;
        flex-direction: row;
        align-items: center;
        justify-content: @Model.Adress_2.text_position;
        overflow: visible;
        padding: 0;

    }
    </style>

}


@if (Model.Facebook != null)
{

    <style>
        #facebook {
            display: flex;
            flex-direction: row;
            align-items: center;
            justify-content: @Model.Facebook.text_position;
            width: @Model.Facebook.width;
            height: @Model.Facebook.height;
            font-size: @Model.Facebook.size;
            background-color: none;
            font-family: '@Model.Facebook.Font' @Model.Facebook.Font_type;
            color: @Model.Facebook.Color;
            position: relative;
            bottom: @Model.Facebook.p_bottom;
            left: @Model.Facebook.p_left;
            font-weight: @Model.Facebook.font_weight;
            overflow: visible;
            padding: 0;
  /** border: solid red 2px; */
              text-align:@Model.Facebook.text_position;
        }
    </style>

}

@if (Model.Instagram != null)
{

    <style>
        #instagram {
            display: flex;
            flex-direction: row;
            align-items: center;
            justify-content: @Model.Instagram.text_position;
            width: @Model.Instagram.width;
            height: @Model.Instagram.height;
            font-size: @Model.Instagram.size;
            background-color: none;
            font-family: '@Model.Instagram.Font' @Model.Instagram.Font_type;
            color: @Model.Instagram.Color;
            position: relative;
            bottom: @Model.Instagram.p_bottom;
            left: @Model.Instagram.p_left;
            font-weight: @Model.Instagram.font_weight;
            overflow: visible;
            padding: 0;
  /** border: solid red 2px; */
              text-align:@Model.Instagram.text_position;
        }
    </style>

}

<style>
    .info-box {
        width: 100%;
        height: 150px;
        border-color: #236386;
        border-style: solid;
        border-width: 2px;
        border-radius: 0.5em;
        box-shadow: rgba(0,0,0,0.3) 7px 7px 5px;
        text-align: center;
    }

    .input-box {
        background-color: #236386;
        padding: 15px 10px;
        width: 500px;
    }

    .img-bordered {
        border-color: black;
        border-width: 2px;
        border-style: solid;
    }

    ul {
        display: flex;
        flex-direction: row;
    }

    .bubble {
        height: 30px;
        width: 30px;
        border: black 5px solid;
        border-radius: 50px;
        margin: 20px;
        position: relative;
        left: 150px;
    }
</style>
<br />
<div class="row">
    <div class="col-12">
        <nav aria-label="breadcrumb" class="float-left">
            <ol class="breadcrumb">
                <li class="breadcrumb-item"><a href="@Url.Action("Dashboard", "Portal", new {broker=0 })">Home</a></li>
                <li class="breadcrumb-item"><a href="@Url.Action("Index","Market")">Market</a></li>
                <li class="breadcrumb-item"><a href="@Url.Action("brands","Market")">Brands</a></li>
                <li class="breadcrumb-item"><a href="@Url.Action("Categories","Market")">Categories</a></li>
                <li class="breadcrumb-item"><a href="@Url.Action("Categories","Market")">Template</a></li>
                <li class="breadcrumb-item active"> <a href="@Url.Action("SizesAndMaterials","Market")"> Size and Materials</a></li>
                <li class="breadcrumb-item active" aria-current="page"> Customize it</li>
            </ol>
        </nav>
        @Html.Partial("Utilities/ShoppingCart")
    </div>
</div>
<div class="row">
    <div class="col-md-12  text-center">
        <div style="float: right">
            <h2 style="font-weight: bold; color: black ">Personalize it at your own</h2>
        </div>
    </div>
</div>
<br />
<div class="row">
    <div class="col-12 float-left">
        <nav aria-label="breadcrumb">
            <ol class="breadcrumb">
                <li class="breadcrumb-item"><a style="font-weight: bold; color: #236386"><i class="fas fa-check"></i> Select a template</a></li>
                <li class="breadcrumb-item" aria-current="page" style="font-weight: bold; color: #236386"><i class="fas fa-check"></i> Select size and materials</li>
                <li class="breadcrumb-item" aria-current="page" style="font-weight: bold; color: darkgreen"><i class="fas fa-circle"></i> Customize it</li>
            </ol>
        </nav>
    </div>
</div>
<br />
<br />
<div class="row">
    <div class="col-md-2 col-sm-12">

    </div>
    <div class="col-md-8 col-sm-12">
        <div class="info-box">
            <div class="form-inline">
                <div style="margin-left:10px; margin-top:10px; background-color: #236386; width: 25px; height: 25px; text-align: center" class="rounded-circle">
                    <i style="position: relative; top: 3px; color: white" class="fas fa-info"></i>
                </div>
                <h3 class="text-center"><strong style="color: #236386; position: relative; top: 15px; left: 15px"><p>How to edit your sign: </p></strong></h3>
            </div>
            <br />
            <div class="text-center">
                <strong>
                    To personalize your sign, add your custom text line by line in the fields below,
                    in the sequence you would like it to appear on your sign. You do not need to fill in every line,
                    only those you wish you use (note: in some cases, the site will require certain fields to be filled
                    out). Once your order is submitted, our artists will then create a proof of your sign design and email this proof to you.
                </strong>
            </div>
        </div>
    </div>
    <div class="col-md-2 col-sm-12">
    </div>
</div>
<br />
<br />
<div class="row">
    <div class="col-md-1 col-sm-12"></div>
    <div class="col-md-5 col-sm-12">
        <ul id="colorbtns">
            <li><button class="bubble"></button></li>
            <li><button class="bubble"></button></li>
            <li><button class="bubble"></button></li>
        </ul>
        <div id="outtercanvas" style="height:@Model.Details.height; width:@Model.Details.width">
            <img class="shadow-lg img-bordered" src="~/@Model.Details.path" id="img" height="500" width="500" alt="Template to edit" />
            @if (Model.Header != null)
            {
                <h4 id="header">@Model.Header.description </h4>
                <div id="headerid" style="display:none">@Model.Header.id</div>
            }
            @if (Model.Company != null)
            {
                <h4 id="company">@Model.Company.description </h4>
                <div id="companyid" style="display:none">@Model.Company.id</div>
            }
            @if (Model.Agent != null)
            {
                <h4 id="agent">@Model.Agent.description </h4>
                <div id="agentid" style="display:none">@Model.Agent.id</div>
            }
            @if (Model.Phone != null)
            {
                <h4 id="phone">@Model.Phone.description </h4>
                <div id="phoneid" style="display:none">@Model.Phone.id</div>
            }
            @if (Model.Website != null)
            {
                <h4 id="website"> @Model.Website.description </h4>
                <div id="websiteid" style="display:none">@Model.Website.id</div>
            }
            @if (Model.Photo != null)
            {
                <div id="photo"></div>
                <img id="originalPhoto" src="~/@Model.Details.pic_path" />
            }
            @if (Model.Logo != null)
            {
                <div id="logo"></div>
                <div id="logoid" style="display:none">@Model.Logo.id</div>
            }
            @if (Model.Title != null)
            {
                <h4 id="title">@Model.Title.description </h4>
                <div id="titleid" style="display:none">@Model.Title.id</div>
            }
            @if (Model.Email != null)
            {
                <h4 id="email">@Model.Email.description </h4>
                <div id="emailid" style="display:none">@Model.Email.id</div>
            }
            @if (Model.Message != null)
            {
                <h4 id="message">@Model.Message.description </h4>
                <div id="messageid" style="display:none">@Model.Message.id</div>
            }
            @if (Model.Other != null)
            {
                <h4 id="other">@Model.Other.description </h4>
                <div id="otherid" style="display:none">@Model.Other.id</div>
            }
            @if (Model.Adress_1 != null)
            {
                <h4 id="adress1">@Model.Adress_1.description </h4>
                <div id="adress1id" style="display:none">@Model.Adress_1.id</div>
            }
            @if (Model.Adress_2 != null)
            {
                <h4 id="adress2">@Model.Adress_2.description </h4>
                <div id="adress2id" style="display:none">@Model.Adress_2.id</div>
            }
            @if (Model.Facebook != null)
            {
                <h4 id="facebook">@Model.Facebook.description </h4>
                <div id="facebookid" style="display:none">@Model.Facebook.id</div>
            }
            @if (Model.Instagram != null)
            {
                <h4 id="instagram">@Model.Instagram.description </h4>
                <div id="instagramid" style="display:none">@Model.Instagram.id</div>
            }
        </div>
        <br />
        <br />
    </div>
    <div class="col-md-1 col-sm-12"></div>
    <div class="col-md-5 col-sm-12 text-center">
        <div class="input-group input-box text-center">
            <h3 style="color: white"><strong>Desing : Item X</strong></h3>
            <br />
            <br />
            @if (Model.Header != null)
            {
                <div class="input-group mb-3">
                    <div class="input-group-prepend">
                        <span class="input-group-text" id="basic-addon1"><i style="font-weight: bold; color: black" class="fas fa-pencil-alt"></i></span>
                    </div>
                    <input id="headerlbl" style="font-weight: bold; color: black" type="text" class="form-control" placeholder="@Model.Header.description">
                </div>
                <br />
            }
            @if (Model.Company != null)
            {
                <div class="input-group mb-3">
                    <div class="input-group-prepend">
                        <span class="input-group-text"><i style="font-weight: bold; color: black" class="fas fa-pencil-alt"></i></span>
                    </div>
                    <input id="companylbl" style="font-weight: bold; color: black" type="text" class="form-control" placeholder="@Model.Company.description">
                </div>
                <br />
            }
            @if (Model.Agent != null)
            {
                <div class="input-group mb-3">
                    <div class="input-group-prepend">
                        <span class="input-group-text"><i style="font-weight: bold; color: black" class="fas fa-pencil-alt"></i></span>
                    </div>
                    <input id="agentlbl" style="font-weight: bold; color: black" type="text" class="form-control" placeholder="@Model.Agent.description">
                </div>
                <br />
            }
            @if (Model.Phone != null)
            {
                <div class="input-group mb-3">
                    <div class="input-group-prepend">
                        <span class="input-group-text"><i style="font-weight: bold; color: black" class="fas fa-pencil-alt"></i></span>
                    </div>
                    <input id="phonelbl" style="font-weight: bold; color: black" type="text" class="form-control" placeholder="@Model.Phone.description">
                </div>
                <br />
            }

            @if (Model.Website != null)
            {
                <div class="input-group mb-3">
                    <div class="input-group-prepend">
                        <span class="input-group-text"><i style="font-weight: bold; color: black" class="fas fa-pencil-alt"></i></span>
                    </div>
                    <input id="websitelbl" style="font-weight: bold; color: black" type="text" class="form-control" placeholder="@Model.Website.description">
                </div>
                <br />
            }
            @if (Model.Title != null)
            {
                <div class="input-group mb-3">
                    <div class="input-group-prepend">
                        <span class="input-group-text"><i style="font-weight: bold; color: black" class="fas fa-pencil-alt"></i></span>
                    </div>
                    <input id="titlelbl" style="font-weight: bold; color: black" type="text" class="form-control" placeholder="@Model.Title.description">
                </div>
                <br />
            }
            @if (Model.Email != null)
            {
                <div class="input-group mb-3">
                    <div class="input-group-prepend">
                        <span class="input-group-text"><i style="font-weight: bold; color: black" class="fas fa-pencil-alt"></i></span>
                    </div>
                    <input id="emaillbl" style="font-weight: bold; color: black" type="text" class="form-control" placeholder="@Model.Email.description">
                </div>
                <br />
            }
            @if (Model.Message != null)
            {
                <div class="input-group mb-3">
                    <div class="input-group-prepend">
                        <span class="input-group-text"><i style="font-weight: bold; color: black" class="fas fa-pencil-alt"></i></span>
                    </div>
                    <input id="messagelbl" style="font-weight: bold; color: black" type="text" class="form-control" placeholder="@Model.Message.description">
                </div>
                <br />
            }
            @if (Model.Other != null)
            {
                <div class="input-group mb-3">
                    <div class="input-group-prepend">
                        <span class="input-group-text"><i style="font-weight: bold; color: black" class="fas fa-pencil-alt"></i></span>
                    </div>
                    <input id="otherlbl" style="font-weight: bold; color: black" type="text" class="form-control" placeholder="@Model.Other.description">
                </div>
                <br />
            }
            @if (Model.Adress_1 != null)
            {
                <div class="input-group mb-3">
                    <div class="input-group-prepend">
                        <span class="input-group-text"><i style="font-weight: bold; color: black" class="fas fa-pencil-alt"></i></span>
                    </div>
                    <input id="adress1lbl" style="font-weight: bold; color: black" type="text" class="form-control" placeholder="@Model.Adress_1.description">
                </div>
                <br />
            }
            @if (Model.Adress_2 != null)
            {
                <div class="input-group mb-3">
                    <div class="input-group-prepend">
                        <span class="input-group-text"><i style="font-weight: bold; color: black" class="fas fa-pencil-alt"></i></span>
                    </div>
                    <input id="adress2lbl" style="font-weight: bold; color: black" type="text" class="form-control" placeholder="@Model.Adress_2.description">
                </div>
                <br />
            }
            @if (Model.Facebook != null)
            {
                <div class="input-group mb-3">
                    <div class="input-group-prepend">
                        <span class="input-group-text"><i style="font-weight: bold; color: black" class="fas fa-pencil-alt"></i></span>
                    </div>
                    <input id="facebooklbl" style="font-weight: bold; color: black" type="text" class="form-control" placeholder="@Model.Facebook.description">
                </div>
                <br />
            }
            @if (Model.Instagram != null)
            {
                <div class="input-group mb-3">
                    <div class="input-group-prepend">
                        <span class="input-group-text"><i style="font-weight: bold; color: black" class="fas fa-pencil-alt"></i></span>
                    </div>
                    <input id="instagramlbl" style="font-weight: bold; color: black" type="text" class="form-control" placeholder="@Model.Instagram.description">
                </div>
                <br />
            }

            @if (Model.Photo != null)
            {
                <div class="input-group mb-3">
                    <div class="input-group-prepend">
                        <span class="input-group-text" id="inputGroupFileAddon01"><i style="font-weight: bold; color: black" class="fas fa-cloud-upload-alt"></i></span>
                    </div>
                    <div class="custom-file">
                        <input type="file" class="custom-file-input" id="photobtn" accept="image/gif, image/jpeg, image/png">
                        <label class="custom-file-label" for="inputGroupFile01">Choose photo</label>
                    </div>
                </div>
                <br />
            }

            @if (Model.Logo != null)
            {
                <div class="input-group mb-3">
                    <div class="input-group-prepend">
                        <span class="input-group-text" id="inputGroupFileAddon01"><i style="font-weight: bold; color: black" class="fas fa-cloud-upload-alt"></i></span>
                    </div>
                    <div class="custom-file">
                        <input type="file" class="custom-file-input" id="logobtn" accept="image/gif, image/jpeg, image/png">
                        <label class="custom-file-label" for="inputGroupFile01">Choose logo</label>
                    </div>
                </div>
                <br />
            }
            <div class="form-group">
                <textarea style="width: 475px" placeholder="Add your comments" class="form-control" id="comments" rows="5"></textarea>
            </div>
            <br />
            <div>
                <button id="addedbtn" style="margin:auto; position: relative; left: 150px" class="btn btn-lg btn-light"><strong style="color: black">Add to kart <i class="fas fa-shopping-cart"></i></strong> </button>
            </div>
        </div>

    </div>
</div>
@section Scripts{

    @if (Model.Header != null)
    {
        <script>
            var templateid = "@Model.Header.template";
        </script>
    }
    else if (Model.Agent != null)
    {
        <script>
            var templateid = "@Model.Agent.template";
        </script>
    }
    else if (Model.Company != null)
    {
        <script>
            var templateid = "@Model.Company.template";
        </script>
    }
    else if (Model.Phone != null)
    {
        <script>
            var templateid = "@Model.Phone.template";
        </script>
    }
    else if (Model.Website != null)
    {
        <script>
            var templateid = "@Model.Website.template";
        </script>
    }
    else if (Model.Title != null)
    {
        <script>
            var templateid = "@Model.Title.template";
        </script>
    }
    else if (Model.Email != null)
    {
        <script>
            var templateid = "@Model.Email.template";
        </script>
    }
    else if (Model.Message != null)
    {
        <script>
            var templateid = "@Model.Message.template";
        </script>
    }
    else if (Model.Other != null)
    {
        <script>
            var templateid = "@Model.Other.template";
        </script>
    }
    else if (Model.Adress_1 != null)
    {
        <script>
            var templateid = "@Model.Adress_1.template";
        </script>
    }
    else if (Model.Adress_2 != null)
    {
        <script>
            var templateid = "@Model.Adress_2.template";
        </script>
    }
    else if (Model.Facebook != null)
    {
        <script>
            var templateid = "@Model.Facebook.template";
        </script>
    }
    else if (Model.Instagram != null)
    {
        <script>
            var templateid = "@Model.Instagram.template";
        </script>
    }
    <script>

            var img = document.getElementById("img");
        var header = document.getElementById("header");
        var company = document.getElementById("company");
        var agent = document.getElementById("agent");
        var phone = document.getElementById("phone");
        var website = document.getElementById("website");
        var title = document.getElementById("title");
        var email = document.getElementById("email");
        var message = document.getElementById("message");
        var other = document.getElementById("other");
        var adress1 = document.getElementById("adress1");
        var adress2 = document.getElementById("adress2");
        var facebook = document.getElementById("facebook");
        var instagram = document.getElementById("instagram");
        var comments = document.getElementById("comments");

        var colors = [];
        var labelcolors = [];

        var bubbles = document.querySelectorAll(".bubble");

        for (var item of bubbles) {
            item.addEventListener("click", changePicSource);
        }

        function changePicSource(e) {
            $("#preloader").show();
            for (var item of colors) {
                if (item.color == e.target.id) {
                   img.src= `/${item.path}`;;
                }
            }

            for (var item of labelcolors) {
                if (item.background == e.target.id) {

                    if (item.name == "Header") {
                        if (header) {
                            header.style.color = `${item.color}`;
                        }
                    }

                    if (item.name == "Agent") {
                        if (agent) {
                            agent.style.color = `${item.color}`;
                        }
                    }

                    if (item.name == "Phone") {
                        if (phone) {
                            phone.style.color = `${item.color}`;
                        }
                    }

                    if (item.name == "Website") {
                        if (website) {
                            website.style.color = `${item.color}`;
                        }
                    }

                    if (item.name == "Title") {
                        if (title) {
                            title.style.color = `${item.color}`;
                        }
                    }

                    if (item.name == "Email") {
                        if (email) {
                            email.style.color = `${item.color}`;
                        }
                    }

                    if (item.name == "message") {
                        if (message) {
                            message.style.color = `${item.color}`;
                        }
                    }

                    if (item.name == "Other") {
                        if (other) {
                            other.style.color = `${item.color}`;
                        }
                    }

                    if (item.name == "Adress_1") {
                        if (adress1) {
                            adress1.style.color = `${item.color}`;
                        }
                    }

                    if (item.name == "Adress_2") {
                        if (adress2) {
                            adress2.style.color = `${item.color}`;
                        }
                    }

                    if (item.name == "Facebook") {
                        if (facebook) {
                            facebook.style.color = `${item.color}`;
                        }
                    }

                    if (item.name == "Instagram") {
                        if (instagram) {
                            instagram.style.color = `${item.color}`;
                        }
                    }

                }
            }

            $("#preloader").hide();
        }

        window.onload = function () {
            img.width = removePixels("@Model.Details.width");
            img.height = removePixels("@Model.Details.height");



            $.ajax({
                        type: 'GET',
                   contentType: 'application/json',
                        url: '@Url.Action("GetTemplateColors", "Market")'+"?id="+templateid,
                        data: null,
                        processData: true,
                        success: function (result) {
                            if (result.tempcolors.length>0) {
                                colors = result.tempcolors;
                                labelcolors = result.labcolors;
                                count = 0;
                                console.log(result);
                                for (var item of bubbles) {
                                    item.style.backgroundColor = `${result.tempcolors[count].color}`;
                                    item.id = `${result.tempcolors[count].color}`;

                                    count++;
                                }

                            }
                            else {

                                $("#colorbtns").hide();
                            }
                        },
                error: function (error) {
                                $("#colorbtns").hide();
                        }
                    });
        }


        //we create a canvas to contain the canvas from div
        var inner = document.createElement('canvas');
        inner.height = removeQuotes("@Model.Details.saved_height");
        inner.width = removeQuotes("@Model.Details.saved_width");;
        context = inner.getContext('2d');

        var imgUrl;

        //we create a canvas to contain the canvas from canvas with right dimensions
        var can = document.createElement('canvas');
        can.height = removeQuotes("@Model.Details.saved_height");
        can.width = removeQuotes("@Model.Details.saved_width");
         var cont = can.getContext('2d');


        /** if we like to fill with text directly in the canvas
        function drawHeader() {
             header = canvas.getContext('2d');
            header.font = "60px Roboto";
            header.fillStyle = "white";
            header.fillText("For sale", 150, 70);
        }
         */

          //this generates a canvas from div but it doest get the right dimension so a second is needed
        function html2Canvasdraw(id, outtercanvas) {
            //drawImage(image, source-x, source-y, source-Width, source-Height, destination-x, dy, dWidth, dHeight);
            html2canvas(document.querySelector("#" + id)).then(innercanvas => {
                outtercanvas.drawImage(innercanvas, 0, 0, removeQuotes("@Model.Details.saved_width"), removeQuotes("@Model.Details.saved_height"));
                //this invokes the second canvas

                 html2CanvasdrawFinal();
            });
        }

        //this generates a canvas from canvas with the right height and with to be saved
        function html2CanvasdrawFinal() {
            //drawImage(image, source-x, source-y, source-Width, source-Height, destination-x, dy, dWidth, dHeight);
               cont.drawImage(inner, 0, 0);

            imgUrl = inner.toDataURL("image/jpeg", 1.0);
        }


        $("#addedbtn").click(function (e) {

            var list = [];

            var labels = {};


  if (header) {
                labels = { id: 0, labelid: $("#headerid").html(), text: header.innerHTML, saved_template: 0, templateid: '@Model.Details.id', font_size: `${parseInt($('#header').css('font-size'))}px`, color: $('#header').css('color')  };

                list.push(labels);
            }

            if (company) {
                labels = { id: 0, labelid: $("#companyid").html(), text: company.innerHTML, saved_template: 0, templateid: '@Model.Details.id', font_size: `${parseInt($('#company').css('font-size'))}px`, color: $('#company').css('color') };
                list.push(labels);
            }

            if (agent) {
                labels = { id: 0, labelid: $("#agentid").html(), text: agent.innerHTML, saved_template: 0, templateid: '@Model.Details.id', font_size: `${parseInt($('#agent').css('font-size'))}px`, color: $('#agent').css('color') };

                list.push(labels);
            }

            if (website) {
                labels = { id: 0, labelid: $("#websiteid").html(), text: website.innerHTML, saved_template: 0, templateid: '@Model.Details.id', font_size: `${parseInt($('#website').css('font-size'))}px`, color: $('#website').css('color') };

                list.push(labels);
            }

            if (title) {
                labels = { id: 0, labelid: $("#titleid").html(), text: title.innerHTML, saved_template: 0, templateid: '@Model.Details.id', font_size: `${parseInt($('#title').css('font-size'))}px`, color: $('#title').css('color')  };

                list.push(labels);
            }

            if (phone) {
                labels = { id: 0, labelid: $("#phoneid").html(), text: phone.innerHTML, saved_template: 0, templateid: '@Model.Details.id', font_size: `${parseInt($('#phone').css('font-size'))}px`, color: $('#phone').css('color') };

                list.push(labels);
            }

             if (email) {
                 labels = { id: 0, labelid: $("#emailid").html(), text: email.innerHTML, saved_template: 0, templateid: '@Model.Details.id', font_size: `${parseInt($('#email').css('font-size'))}px`, color: $('#email').css('color') };

                list.push(labels);
            }

             if (message) {
                 labels = { id: 0, labelid: $("#messageid").html(), text: message.innerHTML, saved_template: 0, templateid: '@Model.Details.id', font_size: `${parseInt($('#message').css('font-size'))}px`, color: $('#message').css('color') };

                list.push(labels);
            }

             if (other) {
                 labels = { id: 0, labelid: $("#otherid").html(), text: other.innerHTML, saved_template: 0, templateid: '@Model.Details.id', font_size: `${parseInt($('#other').css('font-size'))}px`, color: $('#other').css('color') };

                list.push(labels);
            }

            if (adress1) {
                labels = { id: 0, labelid: $("#adress1id").html(), text: adress1.innerHTML, saved_template: 0, templateid: '@Model.Details.id', font_size: `${parseInt($('#adress1').css('font-size'))}px`, color: $('#adress1').css('color') };

                list.push(labels);
            }

            if (adress2) {
                labels = { id: 0, labelid: $("#adress2id").html(), text: adress2.innerHTML, saved_template: 0, templateid: '@Model.Details.id', font_size: `${parseInt($('#adress2').css('font-size'))}px`, color: $('#adress2').css('color') };

                list.push(labels);
            }
            if (facebook) {
                labels = { id: 0, labelid: $("#facebookid").html(), text: facebook.innerHTML, saved_template: 0, templateid: '@Model.Details.id', font_size: `${parseInt($('#facebook').css('font-size'))}px`, color: $('#facebook').css('color') };

                list.push(labels);
            }
             if (instagram) {
                 labels = { id: 0, labelid: $("#instagramid").html(), text: instagram.innerHTML, saved_template: 0, templateid: '@Model.Details.id', font_size: `${parseInt($('#instagram').css('font-size'))}px`, color: $('#instagram').css('color') };

                list.push(labels);
            }
            /** to save file directly from .file[0] to base64
            var logobtn = document.getElementById('logobtn');

            if (logobtn) {
                if (logobtn.files[0]) {
                    (async () => {
                        logo64 = await getBase64(photobtn.files[0]);
                    })();
                }
             }
           */

            var logo64 = '';
            var photo64 = '';

            var photobtn = document.getElementById('photobtn');
            if (photobtn) {
                if (photobtn.files[0]) {
                    var photoelem = document.getElementById('photoelem');
                    var photocanvas = document.createElement('canvas');
                    photocanvas.height = photoelem.height;
                    photocanvas.width = photoelem.width;

                    var cn = photocanvas.getContext('2d');

                    cn.drawImage(photoelem, 0, 0, photoelem.width, photoelem.height);
                    photo64 = photocanvas.toDataURL("image/jpeg", 1.0);
                }
            }


            var logobtn = document.getElementById('logobtn');
            if (logobtn) {
                if (logobtn.files[0]) {
                    var logoelem = document.getElementById('logoelem');
                    var logocanvas = document.createElement('canvas');
                    logocanvas.height = logocanvas.height;
                    logocanvas.width = logocanvas.width;
                    var cn = logocanvas.getContext('2d');

                    cn.drawImage(logoelem, 0, 0, logoelem.width,logo.height);
                    logo64 = logocanvas.toDataURL("image/jpeg", 1.0);
                }
            }



            html2Canvasdraw("outtercanvas", context);

            var isConfirm = confirm("Your edited template will be saved do you confirm?");
            var data = {};
            var url;
            var counter = 0;
            var edited = 1;
            var back = img.src;
            var background = back.substring(back.indexOf("Content"));

            if (isConfirm) {
                $("#preloader").show();
                setTimeout(function () {
                    if (photobtn && logobtn) {
                    if (photobtn.files[0] && logobtn.files[0]) {
                        data = { img: imgUrl, list: list, photo: photo64, logo: logo64, edited: edited, comment: comments.value, background: background  };
                        url = '@Url.Action("AddToCartPhotoLogo", "Market")';
                        counter++;
                    }
                    }
                     else if (photobtn) {
                       if (photobtn.files[0]) {
                        console.log("2");
                           data = { img: imgUrl, list: list, file: photo64, filetype: 1, edited: edited, comment: comments.value, background: background  };
                           url = '@Url.Action("AddToCartPhoto", "Market")';
                           counter++;
                    }
                    } else if (logobtn) {
                     if (logobtn.files[0]) {
                        console.log("3");
                         data = { img: imgUrl, list: list, file: logo64, filetype: 0, edited: edited, comment: comments.value, background: background  };
                         url = '@Url.Action("AddToCartLogo", "Market")';
                         counter++;
                    }
                    }

                    if (counter === 0) {
                        console.log("4");
                        data = { img: imgUrl, list: list, edited: edited, comment: comments.value, background: background };
                        url = '@Url.Action("AddToCart", "Market")';
                    }

                    console.log(data);
                    $.ajax({
                        type: 'POST',
                        contentType: 'application/x-www-form-urlencoded; charset=UTF-8',
                        url: url,
                        data: data,
                        processData: true,
                        success: function (result) {
                            if (result == "SUCCESS") {
                                $("#preloader").hide();
                                new Noty({
                                    type: 'success',
                                    layout: 'topRight',
                                    text: 'Template edited succesfully',
                                    progressBar: true,
                                    timeout: 2500
                                }).show()
                                setTimeout(function () {
                                    window.location.href = '@Url.Action("ShoppingCart", "Market")';
                                }, 2000);
                            }
                            else {
                                $("#preloader").hide();
                                setTimeout(function () {
                                    alert(result);
                                }, 1000);

                            }
                        },
                        error: function (error) {
                            $("#preloader").hide();
                            setTimeout(function () {
                                alert("Error editing your template, refresh the page and try again...");
                            }, 1000);

                        }
                    });
                }, 1500);
                }

        });

        function removePixels(text) {
            var chars = text.split('');

            var len = chars.length - 1;
            var result = '';
            var count = 1;
            for (var i of chars) {
                if (count == len) {
                    break;
                }
                result = result + i;
                count++;
            }
            return result;
        }


        //remove everything leaves only numbers
        function removeQuotes(text) {
            var chars = text.split('');
            var result = '';

            for (var i = 0; i < chars.length; i++) {

                if (!isNaN(chars[i])) {
                    result = result + chars[i];
                }
            }
            return result;
        }

        function getBase64(file) {
            return new Promise((resolve, reject) => {
                const reader = new FileReader();
                reader.readAsDataURL(file);
                reader.onload = () => resolve(reader.result);
                reader.onerror = error => reject(error);
            });
        }
       // prints the base64 string

        function isOverflown(element) {
            return element.scrollHeight > element.clientHeight || element.scrollWidth > element.clientWidth;
        }
    </script>

    @if (Model.Header != null)
    {
        <script>
            var header = document.getElementById("header");
            var harr = [];
            var breaker = {};




    $("#headerlbl").keyup(function (e) {

        header.innerHTML = e.target.value;

        var size = parseFloat($('#header').css('font-size'));
        var font;

        if (isOverflown(header)) {
            breaker = { lenght: parseInt(e.target.value.length), font: size };
            harr.push(breaker);

        }

        if (harr[0]) {
            var count = 0;
            for (var item of harr) {
                count++;
                      if (parseInt(e.target.value.length) < parseInt(item.lenght)) {
                          header.style.fontSize = `${item.font}px`;
                         var erase= harr.length - count;
                          harr.splice(count, erase);

                      }
                  }


                  while (isOverflown(header)) {
                      size = parseFloat($('#header').css('font-size'));
                      size = size - 1;
                      font = `${size}px`;
                      header.style.fontSize = font;
                      header.style.clear = "both";
                  }


        }

        });

        $("#headerlbl").blur(function (e) {
            if (!header.innerHTML) {
                header.innerHTML = "@Model.Header.description";
            }
        });

        </script>

    }

    @if (Model.Company != null)
    {
        <script>
            var company = document.getElementById("company");
            var carr = [];
            var breaker = {};

      $("#companylbl").keyup(function (e) {
          company.innerHTML = e.target.value;


var size = parseFloat($('#company').css('font-size'));
        var font;

        if (isOverflown(company)) {
            breaker = { lenght: parseInt(e.target.value.length), font: size };
            carr.push(breaker);

        }

        if (carr[0]) {
            var count = 0;
            for (var item of carr) {
                count++;
                      if (parseInt(e.target.value.length) < parseInt(item.lenght)) {
                          company.style.fontSize = `${item.font}px`;
                         var erase= carr.length - count;
                          carr.splice(count, erase);

                      }
                  }

                  while (isOverflown(company)) {
                      size = parseFloat($('#company').css('font-size'));
                      size = size - 1;
                      font = `${size}px`;
                      company.style.fontSize = font;
                      company.style.clear = "both";
                  }
        }
      });

      $("#companylbl").blur(function (e) {
            if (!company.innerHTML) {
                company.innerHTML = "@Model.Company.description";
            }
        });

        </script>

    }

    @if (Model.Agent != null)
    {
        <script>
                        var agent = document.getElementById("agent");
                        var aarr = [];
                        var breaker = {};
            $("#agentlbl").keyup(function (e) {
                agent.innerHTML = e.target.value;

                var size = parseFloat($('#agent').css('font-size'));
                var font;

                if (isOverflown(agent)) {
                    breaker = { lenght: parseInt(e.target.value.length), font: size };
                    aarr.push(breaker);

                }

                if (aarr[0]) {
                    var count = 0;
                    for (var item of aarr) {
                        count++;
                        if (parseInt(e.target.value.length) < parseInt(item.lenght)) {
                            agent.style.fontSize = `${item.font}px`;
                            var erase = aarr.length - count;
                            aarr.splice(count, erase);
                        }
                    }

                    while (isOverflown(agent)) {
                        size = parseFloat($('#agent').css('font-size'));
                        size = size - 1;
                        font = `${size}px`;
                        agent.style.fontSize = font;
                        agent.style.clear = "both";
                    }
                }

            });

              $("#agentlbl").blur(function (e) {
            if (!agent.innerHTML) {
                agent.innerHTML = "@Model.Agent.description";
            }
        });
        </script>

    }

    @if (Model.Phone != null)
    {
        <script>
                        var phone = document.getElementById("phone");
                        var parr = [];
                        var breaker = {};

                    $("#phonelbl").keyup(function (e) {
                        phone.innerHTML = e.target.value;

                        var size = parseFloat($('#phone').css('font-size'));
                        var font;

                        if (isOverflown(phone)) {
                            breaker = { lenght: parseInt(e.target.value.length), font: size };
                            parr.push(breaker);
                        }

                        if (parr[0]) {
                            var count = 0;
                            for (var item of parr) {
                                count++;
                                if (parseInt(e.target.value.length) < parseInt(item.lenght)) {
                                    phone.style.fontSize = `${item.font}px`;
                                    var erase = parr.length - count;
                                    parr.splice(count, erase);
                                }
                            }


                            while (isOverflown(phone)) {
                                size = parseFloat($('#phone').css('font-size'));
                                size = size - 1;
                                font = `${size}px`;
                                phone.style.fontSize = font;
                                phone.style.clear = "both";
                            }


                        }
                    });

              $("#phonelbl").blur(function (e) {
            if (!phone.innerHTML) {
                phone.innerHTML = "@Model.Phone.description";
            }
        });

        </script>

    }

    @if (Model.Website != null)
    {
        <script>
                        var website = document.getElementById("website");
                        var warr = [];
                        var breaker = {};

                    $("#websitelbl").keyup(function (e) {
                        website.innerHTML = e.target.value;

                        var size = parseFloat($('#website').css('font-size'));
                        var font;

                        if (isOverflown(website)) {
                            breaker = { lenght: parseInt(e.target.value.length), font: size };
                            warr.push(breaker);
                        }

                        if (warr[0]) {
                            var count = 0;
                            for (var item of warr) {
                                count++;
                                if (parseInt(e.target.value.length) < parseInt(item.lenght)) {
                                    website.style.fontSize = `${item.font}px`;
                                    var erase = warr.length - count;
                                    warr.splice(count, erase);
                                }
                            }

                            while (isOverflown(website)) {
                                size = parseFloat($('#website').css('font-size'));
                                size = size - 1;
                                font = `${size}px`;
                                website.style.fontSize = font;
                                website.style.clear = "both";
                            }
                        }
                    });

              $("#websitelbl").blur(function (e) {
            if (!website.innerHTML) {
                website.innerHTML = "@Model.Website.description";
            }
        });
        </script>

    }

    @if (Model.Title != null)
    {
        <script>
                        var title = document.getElementById("title");
                        var tarr = [];
                        var breaker = {};
            $("#titlelbl").keyup(function (e) {
                title.innerHTML = e.target.value;

                var size = parseFloat($('#title').css('font-size'));
                var font;

                if (isOverflown(title)) {
                    breaker = { lenght: parseInt(e.target.value.length), font: size };
                    tarr.push(breaker);

                }

                if (tarr[0]) {
                    var count = 0;
                    for (var item of tarr) {
                        count++;
                        if (parseInt(e.target.value.length) < parseInt(item.lenght)) {
                            title.style.fontSize = `${item.font}px`;
                            var erase = tarr.length - count;
                            tarr.splice(count, erase);
                        }
                    }

                    while (isOverflown(title)) {
                        size = parseFloat($('#title').css('font-size'));
                        size = size - 1;
                        font = `${size}px`;
                        title.style.fontSize = font;
                        title.style.clear = "both";
                    }
                }
            });


              $("#titlelbl").blur(function (e) {
            if (!title.innerHTML) {
                title.innerHTML = "@Model.Title.description";
            }
        });
        </script>

    }

    @if (Model.Email != null)
    {
        <script>
                var email = document.getElementById("email");
                var emarr = [];
                var breaker = {};
                    $("#emaillbl").keyup(function (e) {
                        email.innerHTML = e.target.value;

                        var size = parseFloat($('#email').css('font-size'));
                        var font;

                        if (isOverflown(email)) {
                            breaker = { lenght: parseInt(e.target.value.length), font: size };
                            emarr.push(breaker);

                        }

                        if (emarr[0]) {
                            var count = 0;
                            for (var item of emarr) {
                                count++;
                                if (parseInt(e.target.value.length) < parseInt(item.lenght)) {
                                    email.style.fontSize = `${item.font}px`;
                                    var erase = emarr.length - count;
                                    emarr.splice(count, erase);
                                }
                            }

                            while (isOverflown(email)) {
                                size = parseFloat($('#email').css('font-size'));
                                size = size - 1;
                                font = `${size}px`;
                                email.style.fontSize = font;
                                email.style.clear = "both";
                            }
                        }
                    });

              $("#emaillbl").blur(function (e) {
            if (!email.innerHTML) {
                email.innerHTML = "@Model.Email.description";
            }
        });
        </script>

    }

    @if (Model.Message != null)
    {
        <script>
            var message = document.getElementById("message");
            var harr = [];
            var breaker = {};


    $("#messagelbl").keyup(function (e) {

        message.innerHTML = e.target.value;

        var size = parseFloat($('#message').css('font-size'));
        var font;

        if (isOverflown(message)) {
            breaker = { lenght: parseInt(e.target.value.length), font: size };
            harr.push(breaker);

        }

        if (harr[0]) {
            var count = 0;
            for (var item of harr) {
                count++;
                      if (parseInt(e.target.value.length) < parseInt(item.lenght)) {
                          message.style.fontSize = `${item.font}px`;
                         var erase= harr.length - count;
                          harr.splice(count, erase);

                      }
                  }


                  while (isOverflown(message)) {
                      size = parseFloat($('#message').css('font-size'));
                      size = size - 1;
                      font = `${size}px`;
                      message.style.fontSize = font;
                      message.style.clear = "both";
                  }


        }

        });

        $("#messagelbl").blur(function (e) {
            if (!message.innerHTML) {
                message.innerHTML = "@Model.Message.description";
            }
        });

        </script>

    }

    @if (Model.Other != null)
    {
        <script>
            var other = document.getElementById("other");
            var harr = [];
            var breaker = {};


    $("#otherlbl").keyup(function (e) {

        other.innerHTML = e.target.value;

        var size = parseFloat($('#other').css('font-size'));
        var font;

        if (isOverflown(other)) {
            breaker = { lenght: parseInt(e.target.value.length), font: size };
            harr.push(breaker);

        }

        if (harr[0]) {
            var count = 0;
            for (var item of harr) {
                count++;
                      if (parseInt(e.target.value.length) < parseInt(item.lenght)) {
                          other.style.fontSize = `${item.font}px`;
                         var erase= harr.length - count;
                          harr.splice(count, erase);

                      }
                  }


                  while (isOverflown(other)) {
                      size = parseFloat($('#other').css('font-size'));
                      size = size - 1;
                      font = `${size}px`;
                      other.style.fontSize = font;
                      other.style.clear = "both";
                  }


        }

        });

        $("#otherlbl").blur(function (e) {
            if (!other.innerHTML) {
                other.innerHTML = "@Model.Other.description";
            }
        });

        </script>
    }


    @if (Model.Adress_1 != null)
    {
        <script>
            var adress1 = document.getElementById("adress1");
            var harr = [];
            var breaker = {};


    $("#adress1lbl").keyup(function (e) {

        adress1.innerHTML = e.target.value;

        var size = parseFloat($('#adress1').css('font-size'));
        var font;

        if (isOverflown(adress1)) {
            breaker = { lenght: parseInt(e.target.value.length), font: size };
            harr.push(breaker);

        }

        if (harr[0]) {
            var count = 0;
            for (var item of harr) {
                count++;
                      if (parseInt(e.target.value.length) < parseInt(item.lenght)) {
                          adress1.style.fontSize = `${item.font}px`;
                         var erase= harr.length - count;
                          harr.splice(count, erase);

                      }
                  }


                  while (isOverflown(adress1)) {
                      size = parseFloat($('#adress1').css('font-size'));
                      size = size - 1;
                      font = `${size}px`;
                      adress1.style.fontSize = font;
                      adress1.style.clear = "both";
                  }


        }

        });

        $("#adress1lbl").blur(function (e) {
            if (!adress1.innerHTML) {
                adress1.innerHTML = "@Model.Adress_1.description";
            }
        });

        </script>
    }

    @if (Model.Adress_2 != null)
    {
        <script>
            var adress2 = document.getElementById("adress2");
            var harr = [];
            var breaker = {};


    $("#adress2lbl").keyup(function (e) {

        adress2.innerHTML = e.target.value;

        var size = parseFloat($('#adress2').css('font-size'));
        var font;

        if (isOverflown(adress2)) {
            breaker = { lenght: parseInt(e.target.value.length), font: size };
            harr.push(breaker);

        }

        if (harr[0]) {
            var count = 0;
            for (var item of harr) {
                count++;
                      if (parseInt(e.target.value.length) < parseInt(item.lenght)) {
                          adress2.style.fontSize = `${item.font}px`;
                         var erase= harr.length - count;
                          harr.splice(count, erase);

                      }
                  }


                  while (isOverflown(adress2)) {
                      size = parseFloat($('#adress2').css('font-size'));
                      size = size - 1;
                      font = `${size}px`;
                      adress2.style.fontSize = font;
                      adress2.style.clear = "both";
                  }


        }

        });

        $("#adress2lbl").blur(function (e) {
            if (!adress2.innerHTML) {
                adress2.innerHTML = "@Model.Adress_2.description";
            }
        });

        </script>
    }


    @if (Model.Facebook != null)
    {
        <script>
            var facebook = document.getElementById("facebook");
            var harr = [];
            var breaker = {};


    $("#facebooklbl").keyup(function (e) {

        facebook.innerHTML = e.target.value;

        var size = parseFloat($('#facebook').css('font-size'));
        var font;

        if (isOverflown(facebook)) {
            breaker = { lenght: parseInt(e.target.value.length), font: size };
            harr.push(breaker);

        }

        if (harr[0]) {
            var count = 0;
            for (var item of harr) {
                count++;
                      if (parseInt(e.target.value.length) < parseInt(item.lenght)) {
                          facebook.style.fontSize = `${item.font}px`;
                         var erase= harr.length - count;
                          harr.splice(count, erase);

                      }
                  }


                  while (isOverflown(facebook)) {
                      size = parseFloat($('#facebook').css('font-size'));
                      size = size - 1;
                      font = `${size}px`;
                      facebook.style.fontSize = font;
                      facebook.style.clear = "both";
                  }


        }

        });

        $("#facebooklbl").blur(function (e) {
            if (!facebook.innerHTML) {
                facebook.innerHTML = "@Model.Facebook.description";
            }
        });

        </script>
    }


    @if (Model.Instagram != null)
    {
        <script>
            var instagram = document.getElementById("instagram");
            var harr = [];
            var breaker = {};


    $("#instagramlbl").keyup(function (e) {

        instagram.innerHTML = e.target.value;

        var size = parseFloat($('#instagram').css('font-size'));
        var font;

        if (isOverflown(instagram)) {
            breaker = { lenght: parseInt(e.target.value.length), font: size };
            harr.push(breaker);

        }

        if (harr[0]) {
            var count = 0;
            for (var item of harr) {
                count++;
                      if (parseInt(e.target.value.length) < parseInt(item.lenght)) {
                          instagram.style.fontSize = `${item.font}px`;
                         var erase= harr.length - count;
                          harr.splice(count, erase);

                      }
                  }


                  while (isOverflown(instagram)) {
                      size = parseFloat($('#instagram').css('font-size'));
                      size = size - 1;
                      font = `${size}px`;
                      instagram.style.fontSize = font;
                      instagram.style.clear = "both";
                  }


        }

        });

        $("#instagramlbl").blur(function (e) {
            if (!instagram.innerHTML) {
                instagram.innerHTML = "@Model.Instagram.description";
            }
        });

        </script>
    }

    @if (Model.Photo != null)
    {
        <script>
       $("#photobtn").change(function (e) {

            for (var i = 0; i < e.originalEvent.srcElement.files.length; i++) {

                var file = e.originalEvent.srcElement.files[i];

                var origPhoto = document.getElementById("originalPhoto");
                origPhoto.parentNode.removeChild(origPhoto);

                var img = document.createElement("img");
                img.id = "photoelem";
                img.width = removePixels("@Model.Photo.width");
                img.height = removePixels("@Model.Photo.height");
                img.style.position = "relative";
                img.style.bottom = "@Model.Photo.p_bottom";
                img.style.left = "@Model.Photo.p_left";;
                var reader = new FileReader();
                reader.onloadend = function () {
                    img.src = reader.result;
                }
                reader.readAsDataURL(file);


                $("#photo").append(img);
            }
        });



    //removes the px from the end
    function removePixels(text) {
        var chars = text.split('');

        var len = chars.length - 1;
        var result = '';
        var count = 1;
        for (var i of chars) {
            if (count == len) {
                break;
            }
            result = result + i;
            count++;
        }
        return result;
    }


        </script>

    }


    @if (Model.Logo != null)
    {
        <script>
      $("#logobtn").change(function (e) {

            for (var i = 0; i < e.originalEvent.srcElement.files.length; i++) {

                var file = e.originalEvent.srcElement.files[i];


                var img = document.createElement("img");
                img.id = "logoelem";

                img.width = removePixels("@Model.Logo.width");
                img.height = removePixels("@Model.Logo.height");
                img.style.position = "relative";
                img.style.bottom = "@Model.Logo.p_bottom";
                img.style.left = "@Model.Logo.p_left";;
                var reader = new FileReader();
                reader.onloadend = function () {
                    img.src = reader.result;
                }
                reader.readAsDataURL(file);


                $("#logo").append(img);
            }
        });


    //removes the px from the end
    function removePixels(text) {
        var chars = text.split('');

        var len = chars.length - 1;
        var result = '';
        var count = 1;
        for (var i of chars) {
            if (count == len) {
                break;
            }
            result = result + i;
            count++;
        }
        return result;
    }
        </script>
    }


}